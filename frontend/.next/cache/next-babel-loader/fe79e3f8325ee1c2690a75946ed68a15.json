{"ast":null,"code":"import _regeneratorRuntime from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/avinash/Desktop/Projects/TheStore/frontend/components/UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation UPDATE_PRODUCT_MUTATION (\\n            $id:ID!\\n            $name:String\\n            $description:String\\n            $price:Int\\n        ){\\n            UpdateProduct(\\n                id:$id,\\n                data:{\\n                    id:$id,name: $name,description:$description,price:$price\\n                }\\n            )\\n                {\\n                  id\\n                  name\\n                  description\\n                  price\\n                }\\n        }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SINGLE_PRODUCT_QUERY($id:ID!){\\n        Product(where: {id:$id}){\\n            id\\n            name\\n            description\\n            price\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nvar SINGLE_PRODUCT_QUERY = gql(_templateObject());\nvar UPDATE_PRODUCT_MUTATION = gql(_templateObject2());\nexport default function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  //We need to get the existing product\n  var _useQuery = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  console.log(data); // We need to get the mutation to update the product\n\n  var _useMutation = useMutation(UPDATE_PRODUCT_MUTATION, {\n    variables: {\n      id: id //TODO: Pass in updates to product here!\n\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      UpdateProduct = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      updateData = _useMutation2$.data,\n      updateError = _useMutation2$.error,\n      updateLoading = _useMutation2$.loading; //Create State for form inputs\n\n\n  var _useForm = useForm(data),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      clearForm = _useForm.clearForm,\n      resetForm = _useForm.resetForm; //We need the form to handle the updates \n\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault(); // Submit the inputfields to the backend:\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error || updateError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: updateLoading,\n      \"aria-busy\": updateLoading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"price\",\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateProduct, \"BWKPJprqzVFDYOuxbntv99Eedtg=\", false, function () {\n  return [useQuery, useMutation, useForm];\n});\n\n_c = UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/home/avinash/Desktop/Projects/TheStore/frontend/components/UpdateProduct.js"],"names":["useMutation","useQuery","gql","useForm","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","variables","data","error","loading","console","log","updateData","updateError","updateLoading","inputs","handleChange","clearForm","resetForm","e","preventDefault","name","price","description"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,IAAMC,oBAAoB,GAAGF,GAAH,mBAA1B;AAWA,IAAMG,uBAAuB,GAAGH,GAAH,oBAA7B;AAuBA,eAAe,SAASI,aAAT,OAA4B;AAAA;;AAAA,MAAJC,EAAI,QAAJA,EAAI;;AACvC;AADuC,kBAEVN,QAAQ,CAACG,oBAAD,EAAsB;AACvDI,IAAAA,SAAS,EAAC;AAACD,MAAAA,EAAE,EAAFA;AAAD;AAD6C,GAAtB,CAFE;AAAA,MAEhCE,IAFgC,aAEhCA,IAFgC;AAAA,MAE3BC,KAF2B,aAE3BA,KAF2B;AAAA,MAErBC,OAFqB,aAErBA,OAFqB;;AAMvCC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EANuC,CAOvC;;AAPuC,qBAQ2CT,WAAW,CAACK,uBAAD,EAAyB;AAClHG,IAAAA,SAAS,EAAC;AACND,MAAAA,EAAE,EAACA,EADG,CAEN;;AAFM;AADwG,GAAzB,CARtD;AAAA;AAAA,MAQhCD,aARgC;AAAA;AAAA,MAQXQ,UARW,kBAQhBL,IARgB;AAAA,MAQMM,WARN,kBAQAL,KARA;AAAA,MAQ0BM,aAR1B,kBAQkBL,OARlB,EAevC;;;AAfuC,iBAgBgBR,OAAO,CAACM,IAAD,CAhBvB;AAAA,MAgB/BQ,MAhB+B,YAgB/BA,MAhB+B;AAAA,MAgBvBC,YAhBuB,YAgBvBA,YAhBuB;AAAA,MAgBTC,SAhBS,YAgBTA,SAhBS;AAAA,MAgBEC,SAhBF,YAgBEA,SAhBF,EAkBvC;;;AACA,sBACI,QAAC,IAAD;AACE,IAAA,QAAQ;AAAA,2EAAE,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AACRA,gBAAAA,CAAC,CAACC,cAAF,GADQ,CAER;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OADV;AAAA,4BAOE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEZ,KAAK,IAAIK;AAA9B;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAU,MAAA,QAAQ,EAAEC,aAApB;AAAmC,mBAAWA,aAA9C;AAAA,8BAEE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA,wCAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,MAFL;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,WAAW,EAAC,MAJd;AAKE,UAAA,KAAK,EAAEC,MAAM,CAACM,IALhB;AAME,UAAA,QAAQ,EAAEL;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAaE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,WAAW,EAAC,OAJd;AAKE,UAAA,KAAK,EAAED,MAAM,CAACO,KALhB;AAME,UAAA,QAAQ,EAAEN;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAwBE;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA,+CAEE;AACE,UAAA,EAAE,EAAC,aADL;AAEE,UAAA,IAAI,EAAC,aAFP;AAGE,UAAA,WAAW,EAAC,aAHd;AAIE,UAAA,KAAK,EAAED,MAAM,CAACQ,WAJhB;AAKE,UAAA,QAAQ,EAAEP;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF,eAmCE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDC;;GAnEmBZ,a;UAESL,Q,EAMqDD,W,EAQ3BG,O;;;KAhBnCG,a","sourcesContent":["import { useMutation, useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\n\nconst SINGLE_PRODUCT_QUERY = gql`\n    query SINGLE_PRODUCT_QUERY($id:ID!){\n        Product(where: {id:$id}){\n            id\n            name\n            description\n            price\n        }\n    }\n`;\n\nconst UPDATE_PRODUCT_MUTATION = gql`\n    mutation UPDATE_PRODUCT_MUTATION (\n            $id:ID!\n            $name:String\n            $description:String\n            $price:Int\n        ){\n            UpdateProduct(\n                id:$id,\n                data:{\n                    id:$id,name: $name,description:$description,price:$price\n                }\n            )\n                {\n                  id\n                  name\n                  description\n                  price\n                }\n        }\n`;\n\n\nexport default function UpdateProduct({id}){\n    //We need to get the existing product\n    const {data,error,loading} = useQuery(SINGLE_PRODUCT_QUERY,{\n        variables:{id},\n    });\n\n    console.log(data);\n    // We need to get the mutation to update the product\n    const [UpdateProduct, {data:updateData,error:updateError,loading:updateLoading}]= useMutation(UPDATE_PRODUCT_MUTATION,{\n        variables:{\n            id:id\n            //TODO: Pass in updates to product here!\n        }\n    })\n\n    //Create State for form inputs\n    const { inputs, handleChange, clearForm, resetForm } = useForm(data);\n\n    //We need the form to handle the updates \n    return (\n        <Form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            // Submit the inputfields to the backend:\n            \n          }}\n        >\n          <DisplayError error={error || updateError} />\n          <fieldset disabled={updateLoading} aria-busy={updateLoading}>\n            \n            <label htmlFor=\"name\">\n              Name\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                placeholder=\"Name\"\n                value={inputs.name}\n                onChange={handleChange}\n              />\n            </label>\n            <label htmlFor=\"price\">\n              Price\n              <input\n                type=\"number\"\n                id=\"price\"\n                name=\"price\"\n                placeholder=\"price\"\n                value={inputs.price}\n                onChange={handleChange}\n              />\n            </label>\n            <label htmlFor=\"description\">\n              Description\n              <textarea\n                id=\"description\"\n                name=\"description\"\n                placeholder=\"Description\"\n                value={inputs.description}\n                onChange={handleChange}\n              />\n            </label>\n    \n            <button type=\"submit\">Update Product</button>\n          </fieldset>\n        </Form>\n      );\n    }\n"]},"metadata":{},"sourceType":"module"}