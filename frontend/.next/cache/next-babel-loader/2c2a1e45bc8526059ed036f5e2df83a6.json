{"ast":null,"code":"import _regeneratorRuntime from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/avinash/Desktop/Projects/TheStore/frontend/components/Checkout.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CREATE_ORDER_MUTATION($token:String!){\\n    checkout(token:$token){\\n      charge\\n      total\\n      items {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport SickButton from './styles/SickButton';\nimport { useState } from 'react';\nimport nProgress from 'nprogress';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nvar CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:5px 5px 5px 5px rgba(0,0,0,0.1);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\n_c = CheckoutFormStyles;\nvar CREATE_ORDER_MUTATION = gql(_templateObject());\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  _s();\n\n  var _useState = useState(),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n  var router = useRouter();\n\n  var _useCart = useCart(),\n      closeCart = _useCart.closeCart;\n\n  var _useMutation = useMutation(CREATE_ORDER_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      checkout = _useMutation2[0],\n      graphQlError = _useMutation2[1].error;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$stripe$createP, error, paymentMethod, order;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //1.stop the form from submitting and turn the loader on\n              e.preventDefault();\n              setLoading(true);\n              console.log('We gotta do some work..'); //2.Start the page transition\n\n              nProgress.start(); //3.Create the payment method via stripe(Token comes back here if successful)\n\n              _context.next = 6;\n              return stripe.createPaymentMethod({\n                type: 'card',\n                card: elements.getElement(CardElement)\n              });\n\n            case 6:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n              console.log(paymentMethod); //4.Handle any errrors from stripe\n\n              if (!error) {\n                _context.next = 14;\n                break;\n              }\n\n              setError(error);\n              nProgress.done();\n              return _context.abrupt(\"return\");\n\n            case 14:\n              _context.next = 16;\n              return checkout({\n                variables: {\n                  token: paymentMethod.id\n                }\n              });\n\n            case 16:\n              order = _context.sent;\n              console.log(\"Finished with the Order!!\");\n              console.log(order); //6.Change the page to view the order\n\n              router.push({\n                pathname: '/order',\n                query: {\n                  id: order.data.checkout.id\n                }\n              }); //7.close the cart\n\n              closeCart(); //8.Turn the loader off\n\n              setLoading(false);\n              nProgress.done();\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '12px'\n      },\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }, this), graphQlError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '12px'\n      },\n      children: graphQlError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }, this);\n}\n\n_s(CheckoutForm, \"5wGAC/VecCapkQzeeywUCmsSM/s=\", true, function () {\n  return [useStripe, useElements, useMutation];\n});\n\n_c2 = CheckoutForm;\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Checkout;\nexport { Checkout };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckoutFormStyles\");\n$RefreshReg$(_c2, \"CheckoutForm\");\n$RefreshReg$(_c3, \"Checkout\");","map":{"version":3,"sources":["/home/avinash/Desktop/Projects/TheStore/frontend/components/Checkout.js"],"names":["styled","loadStripe","CardElement","Elements","useElements","useStripe","SickButton","useState","nProgress","useMutation","gql","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","router","useRouter","useCart","closeCart","checkout","graphQlError","handleSubmit","e","preventDefault","console","log","start","createPaymentMethod","type","card","getElement","paymentMethod","done","variables","token","id","order","push","pathname","query","data","fontSize","message","Checkout"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport SickButton from './styles/SickButton';\nimport { useState } from 'react';\nimport nProgress from 'nprogress';\nimport { useMutation } from '@apollo/client';\nimport  gql from 'graphql-tag';\n\nconst CheckoutFormStyles = styled.form`\n  box-shadow: 5px 5px 5px 5px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(0, 0, 0, 0.06);\n  border-radius: 5px;\n  padding: 1rem;\n  display: grid;\n  grid-gap: 1rem;\n`;\n\n\nconst CREATE_ORDER_MUTATION = gql`\n  mutation CREATE_ORDER_MUTATION($token:String!){\n    checkout(token:$token){\n      charge\n      total\n      items {\n        id\n        name\n      }\n    }\n  }\n`;\n\n\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const [error,setError] = useState();\n  const [loading,setLoading] = useState();\n  const stripe = useStripe();\n  const elements = useElements();\n  const router = useRouter();\n  const {closeCart} = useCart();\n\n  const [checkout,{error:graphQlError}] = useMutation(\n    CREATE_ORDER_MUTATION\n  )\n  async function handleSubmit(e) {\n    //1.stop the form from submitting and turn the loader on\n    e.preventDefault();\n    setLoading(true);\n    console.log('We gotta do some work..');\n    //2.Start the page transition\n    nProgress.start();\n    //3.Create the payment method via stripe(Token comes back here if successful)\n    const {error,paymentMethod} = await stripe.createPaymentMethod({\n      type:'card',\n      card:elements.getElement(CardElement)\n    })\n\n    console.log(paymentMethod);\n    //4.Handle any errrors from stripe\n    if(error){\n      setError(error);\n      nProgress.done();\n      return;//stops the checkout from happening\n    }\n\n    //5.Send the token from step 3 to our keystone server via a custom mutation\n    const order = await checkout({\n      variables:{\n        token:paymentMethod.id\n      }\n    });\n    console.log(`Finished with the Order!!`);\n    console.log(order);\n    //6.Change the page to view the order\n    router.push({\n      pathname:'/order',\n      query:{id:order.data.checkout.id},\n    });  \n\n    //7.close the cart\n    closeCart();\n    \n    //8.Turn the loader off\n    setLoading(false);\n    nProgress.done();\n  }\n\n  return (\n      <CheckoutFormStyles onSubmit={handleSubmit}>\n        {error && <p style={{fontSize:'12px'}}>{error.message}</p>}\n        {graphQlError && <p style={{fontSize:'12px'}}>{graphQlError.message}</p>}\n\n        <CardElement />\n        <SickButton>Check Out Now</SickButton>\n      </CheckoutFormStyles>\n  );\n}\n\nfunction Checkout(){\n  return (\n    <Elements stripe={stripeLib}>\n      <CheckoutForm/>\n    </Elements>\n  )\n}\n\nexport { Checkout };\n"]},"metadata":{},"sourceType":"module"}