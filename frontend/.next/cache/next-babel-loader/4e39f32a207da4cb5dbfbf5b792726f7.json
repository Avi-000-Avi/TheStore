{"ast":null,"code":"import _defineProperty from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/avinash/Desktop/Projects/TheStore/frontend/components/Search.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SEARCH_PRODUCTS_QUERY($searchTerm: String!){\\n        searchTerms:allProducts(where:{\\n            OR: [\\n                {name_contains_i:$searchTerm},\\n                {description_contains_i:$searchTerm},\\n            ] \\n        }){\\n            id\\n            name\\n            photo{\\n                image{\\n                    publicUrlTransformed\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useLazyQuery } from '@apollo/client';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\nvar SEARCH_PRODUCTS_QUERY = gql(_templateObject()); //We don't want it to fireoff  on component render\n// WE want it to fire off   whenver we want kind of like mutation but it's a query\n//We use lazy Query\n//Bypass apollo client and always go to the network we don't want to storing or caching any of the result we just wanna go directly to the network\n//if we don't go directly to the network it try to pull  it from the cache\n\nexport default function Search() {\n  _s();\n\n  var _this = this;\n\n  var _useLazyQuery = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\n    fetchPolicy: 'no-cache'\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      findItems = _useLazyQuery2[0],\n      _useLazyQuery2$ = _useLazyQuery2[1],\n      loading = _useLazyQuery2$.loading,\n      data = _useLazyQuery2$.data,\n      error = _useLazyQuery2$.error;\n\n  var items = (data === null || data === void 0 ? void 0 : data.searchTerms) || [];\n  var findItemsButChill = debounce(findItems, 350);\n  resetIdCounter();\n\n  var _useCombobox = useCombobox({\n    items: items,\n    onInputValueChange: function onInputValueChange() {\n      console.log('Input Change!');\n      findItemsButChill({\n        variables: {\n          searchTerm: inputValue\n        }\n      });\n    },\n    onSelectedItemChange: function onSelectedItemChange() {\n      console.log('Selected item change');\n    }\n  }),\n      inputValue = _useCombobox.inputValue,\n      getMenuProps = _useCombobox.getMenuProps,\n      getInputProps = _useCombobox.getInputProps,\n      getComboboxProps = _useCombobox.getComboboxProps,\n      getItemProps = _useCombobox.getItemProps;\n\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: 'search',\n        placeholder: 'Search for an item',\n        id: 'search',\n        className: loading ? 'loading' : ''\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getMenuProps()), {}, {\n      children: items.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(DropDownItem, _objectSpread(_objectSpread({}, getItemProps({\n          item: item\n        })), {}, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.photo.image.publicUrlTransformed,\n            alt: item.name,\n            width: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, _this), item.name]\n        }), item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, _this);\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Search, \"omR6CNhzGsyLWlT4NZK59eU50/0=\", false, function () {\n  return [useLazyQuery, useCombobox];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/avinash/Desktop/Projects/TheStore/frontend/components/Search.js"],"names":["useLazyQuery","resetIdCounter","useCombobox","gql","debounce","DropDown","DropDownItem","SearchStyles","SEARCH_PRODUCTS_QUERY","Search","fetchPolicy","findItems","loading","data","error","items","searchTerms","findItemsButChill","onInputValueChange","console","log","variables","searchTerm","inputValue","onSelectedItemChange","getMenuProps","getInputProps","getComboboxProps","getItemProps","type","placeholder","id","className","map","item","photo","image","publicUrlTransformed","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAAQC,QAAR,EAAkBC,YAAlB,EAAgCC,YAAhC,QAAmD,mBAAnD;AAEA,IAAMC,qBAAqB,GAAGL,GAAH,mBAA3B,C,CAoBA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASM,MAAT,GAAiB;AAAA;;AAAA;;AAAA,sBACeT,YAAY,CACnDQ,qBADmD,EAEnD;AACIE,IAAAA,WAAW,EAAC;AADhB,GAFmD,CAD3B;AAAA;AAAA,MACrBC,SADqB;AAAA;AAAA,MACTC,OADS,mBACTA,OADS;AAAA,MACAC,IADA,mBACAA,IADA;AAAA,MACKC,KADL,mBACKA,KADL;;AAQ5B,MAAMC,KAAK,GAAG,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEG,WAAN,KAAqB,EAAnC;AACA,MAAMC,iBAAiB,GAAGb,QAAQ,CAACO,SAAD,EAAW,GAAX,CAAlC;AAEAV,EAAAA,cAAc;;AAXc,qBAYqDC,WAAW,CAAC;AACzFa,IAAAA,KAAK,EAALA,KADyF;AAEzFG,IAAAA,kBAFyF,gCAErE;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAH,MAAAA,iBAAiB,CAAC;AACdI,QAAAA,SAAS,EAAC;AACNC,UAAAA,UAAU,EAACC;AADL;AADI,OAAD,CAAjB;AAKH,KATwF;AAUzFC,IAAAA,oBAVyF,kCAUnE;AAClBL,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;AAZwF,GAAD,CAZhE;AAAA,MAYrBG,UAZqB,gBAYrBA,UAZqB;AAAA,MAYTE,YAZS,gBAYTA,YAZS;AAAA,MAYKC,aAZL,gBAYKA,aAZL;AAAA,MAYoBC,gBAZpB,gBAYoBA,gBAZpB;AAAA,MAYqCC,YAZrC,gBAYqCA,YAZrC;;AA2B5B,sBAAO,QAAC,YAAD;AAAA,4BACH,+CAASD,gBAAgB,EAAzB;AAAA,6BACI,mCAAYD,aAAa,CAAC;AACtBG,QAAAA,IAAI,EAAC,QADiB;AAEtBC,QAAAA,WAAW,EAAC,oBAFU;AAGtBC,QAAAA,EAAE,EAAC,QAHmB;AAItBC,QAAAA,SAAS,EAACpB,OAAO,GAAG,SAAH,GAAa;AAJR,OAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADG,eASH,QAAC,QAAD,kCAAca,YAAY,EAA1B;AAAA,gBACKV,KAAK,CAACkB,GAAN,CAAU,UAAAC,IAAI;AAAA,4BACf,QAAC,YAAD,kCAAiCN,YAAY,CAAC;AAACM,UAAAA,IAAI,EAAJA;AAAD,SAAD,CAA7C;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEA,IAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBC,oBAA3B;AACA,YAAA,GAAG,EAAGH,IAAI,CAACI,IADX;AAEA,YAAA,KAAK,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,mBADJ,EAIKJ,IAAI,CAACI,IAJV;AAAA,YAAoBJ,IAAI,CAACH,EAAzB;AAAA;AAAA;AAAA;AAAA,iBADe;AAAA,OAAd;AADL;AAAA;AAAA;AAAA;AAAA,YATG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAoBH;;GA/CuBtB,M;UACuBT,Y,EAWsCE,W;;;KAZ7DO,M","sourcesContent":["import { useLazyQuery } from '@apollo/client';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport {DropDown, DropDownItem, SearchStyles} from './styles/DropDown';\n\nconst SEARCH_PRODUCTS_QUERY = gql`\n    query SEARCH_PRODUCTS_QUERY($searchTerm: String!){\n        searchTerms:allProducts(where:{\n            OR: [\n                {name_contains_i:$searchTerm},\n                {description_contains_i:$searchTerm},\n            ] \n        }){\n            id\n            name\n            photo{\n                image{\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\n\n\n//We don't want it to fireoff  on component render\n// WE want it to fire off   whenver we want kind of like mutation but it's a query\n//We use lazy Query\n//Bypass apollo client and always go to the network we don't want to storing or caching any of the result we just wanna go directly to the network\n//if we don't go directly to the network it try to pull  it from the cache\nexport default function Search(){\n    const [findItems, {loading, data,error}] = useLazyQuery(\n        SEARCH_PRODUCTS_QUERY,\n        {\n            fetchPolicy:'no-cache',\n        }\n    );\n\n    const items = data?.searchTerms || [];\n    const findItemsButChill = debounce(findItems,350);\n\n    resetIdCounter();\n    const {inputValue, getMenuProps, getInputProps, getComboboxProps,getItemProps} = useCombobox({\n        items,\n        onInputValueChange(){\n            console.log('Input Change!');\n            findItemsButChill({\n                variables:{\n                    searchTerm:inputValue,\n                }\n            });\n        },\n        onSelectedItemChange(){\n            console.log('Selected item change');\n        }\n    })  \n\n    return <SearchStyles>\n        <div {...getComboboxProps()}>\n            <input  {...getInputProps({\n                type:'search',\n                placeholder:'Search for an item',\n                id:'search',\n                className:loading ? 'loading':'',\n            })} />\n        </div>\n        <DropDown {...getMenuProps()}>\n            {items.map(item =>  (\n            <DropDownItem key ={item.id} {...getItemProps({item})}> \n                <img src={item.photo.image.publicUrlTransformed}\n                alt ={item.name}\n                width=\"50\"/>\n                {item.name}\n                </DropDownItem>\n            ))}\n         </DropDown>\n    </SearchStyles>\n}"]},"metadata":{},"sourceType":"module"}