{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/avinash/Desktop/Projects/TheStore/frontend/components/Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useLazyQuery } from '@apollo/client';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\nconst SEARCH_PRODUCTS_QUERY = gql`\n    query SEARCH_PRODUCTS_QUERY($searchTerm: String!){\n        searchTerms:allProducts(where:{\n            OR: [\n                {name_contains_i:$searchTerm},\n                {description_contains_i:$searchTerm},\n            ] \n        }){\n            id\n            name\n            photo{\n                image{\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\nexport default function Search() {\n  const router = useRouter(); //We don't want it to fireoff  on component render\n  // WE want it to fire off   whenver we want kind of like mutation but it's a query not a mutation\n  //THat's wy We use lazy Query\n  //Understand by removing this fetchpolicy\n  //Bypass apollo cache and always go to the network we don't want to storing or caching any of the result we just wanna go directly to the network\n  //if we don't go directly to the network it try to pull  it from the cache\n\n  const [findItems, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\n    fetchPolicy: 'no-cache'\n  });\n  const items = (data === null || data === void 0 ? void 0 : data.searchTerms) || []; //fireoff but don't fireoff that often  that's called debouncing a function\n  //fireoff but holdon for couple of secs and then see maybe if we fired it 6 times within a sec we wait for one sec and only fire it once after it has elapsed\n  //Run only once in a 350 millisecs\n\n  const findItemsButChill = debounce(findItems, 350); //Takes care of server side render issues\n\n  resetIdCounter();\n  const {\n    isOpen,\n    inputValue,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n    getItemProps,\n    highlightedIndex\n  } = useCombobox({\n    items,\n\n    onInputValueChange() {\n      console.log('Input Change!');\n      findItemsButChill({\n        variables: {\n          searchTerm: inputValue\n        }\n      });\n    },\n\n    onSelectedItemChange({\n      selectedItem\n    }) {\n      console.log(selectedItem);\n      router.push({\n        pathname: `/products/${selectedItem.id}`\n      });\n    }\n\n  });\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: 'search',\n        placeholder: 'Search for an item',\n        id: 'search',\n        className: loading ? 'loading' : ''\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getMenuProps()), {}, {\n      children: [isOpen && items.map((item, index) => /*#__PURE__*/_jsxDEV(DropDownItem, _objectSpread(_objectSpread({}, getItemProps({\n        item\n      })), {}, {\n        highlighted: index === highlightedIndex,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.photo.image.publicUrlTransformed,\n          alt: item.name,\n          width: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), item.name]\n      }), item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)), isOpen && !items.length && !loading && /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: [\"Sorry, No items found for \", inputValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 12\n  }, this);\n}","map":{"version":3,"sources":["/home/avinash/Desktop/Projects/TheStore/frontend/components/Search.js"],"names":["useLazyQuery","resetIdCounter","useCombobox","gql","debounce","DropDown","DropDownItem","SearchStyles","SEARCH_PRODUCTS_QUERY","Search","router","useRouter","findItems","loading","data","error","fetchPolicy","items","searchTerms","findItemsButChill","isOpen","inputValue","getMenuProps","getInputProps","getComboboxProps","getItemProps","highlightedIndex","onInputValueChange","console","log","variables","searchTerm","onSelectedItemChange","selectedItem","push","pathname","id","type","placeholder","className","map","item","index","photo","image","publicUrlTransformed","name","length"],"mappings":"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","sourcesContent":["import { useLazyQuery } from '@apollo/client';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport {DropDown, DropDownItem, SearchStyles} from './styles/DropDown';\n\nconst SEARCH_PRODUCTS_QUERY = gql`\n    query SEARCH_PRODUCTS_QUERY($searchTerm: String!){\n        searchTerms:allProducts(where:{\n            OR: [\n                {name_contains_i:$searchTerm},\n                {description_contains_i:$searchTerm},\n            ] \n        }){\n            id\n            name\n            photo{\n                image{\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\n\n\nexport default function Search(){\n    const router = useRouter();\n    \n//We don't want it to fireoff  on component render\n// WE want it to fire off   whenver we want kind of like mutation but it's a query not a mutation\n//THat's wy We use lazy Query\n\n//Understand by removing this fetchpolicy\n//Bypass apollo cache and always go to the network we don't want to storing or caching any of the result we just wanna go directly to the network\n//if we don't go directly to the network it try to pull  it from the cache\n    const [findItems, {loading, data,error}] = useLazyQuery(\n        SEARCH_PRODUCTS_QUERY,\n        {\n            fetchPolicy:'no-cache',\n        }\n    );\n\n    const items = data?.searchTerms || [];\n   //fireoff but don't fireoff that often  that's called debouncing a function\n   //fireoff but holdon for couple of secs and then see maybe if we fired it 6 times within a sec we wait for one sec and only fire it once after it has elapsed\n   //Run only once in a 350 millisecs\n    const findItemsButChill = debounce(findItems,350);\n\n    //Takes care of server side render issues\n    resetIdCounter();\n\n    const {\n        isOpen,\n        inputValue, \n        getMenuProps, \n        getInputProps, \n        getComboboxProps,\n        getItemProps,\n        highlightedIndex\n    } = useCombobox({\n        items,\n        onInputValueChange(){\n            console.log('Input Change!');\n            findItemsButChill({\n                variables:{\n                    searchTerm:inputValue,\n                }\n            });\n        },\n        onSelectedItemChange({selectedItem}){\n            console.log(selectedItem);\n            router.push({\n                pathname:`/products/${selectedItem.id}`\n            })\n        }\n    })  \n\n    return <SearchStyles>\n        <div {...getComboboxProps()}>\n            <input  {...getInputProps({\n                type:'search',\n                placeholder:'Search for an item',\n                id:'search',\n                className:loading ? 'loading':'',\n            })} />\n        </div>\n        <DropDown {...getMenuProps()}>\n            {isOpen && items.map((item,index) =>  (\n            <DropDownItem key ={item.id} {...getItemProps({ item })} highlighted={index === highlightedIndex}> \n                <img src={item.photo.image.publicUrlTransformed}\n                alt ={item.name}\n                width=\"50\"/>\n                {item.name}\n                </DropDownItem>\n            ))}\n            {isOpen && !items.length && !loading && (\n                <DropDownItem>Sorry, No items found for {inputValue}</DropDownItem>\n            )}\n         </DropDown>\n    </SearchStyles>\n}"]},"metadata":{},"sourceType":"module"}