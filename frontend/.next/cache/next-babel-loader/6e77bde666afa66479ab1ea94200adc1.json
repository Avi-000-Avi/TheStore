{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/avinash/Desktop/Projects/TheStore/frontend/components/Checkout.js\";\nimport styled from 'styled-components';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport SickButton from './styles/SickButton';\nimport { useState } from 'react';\nimport nProgress from 'nprogress';\nimport { useMutation } from '@apollo/client';\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:5px 5px 5px 5px rgba(0,0,0,0.1);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\nconst CREATE_ORDER_MUTATION = gql`\n  mutation CREATE_ORDER_MUTATION($token:String!){\n    checkout(token:$token){\n      charge\n      total\n      items {\n        id\n        name\n      }\n    }\n  }\n`;\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [checkout, {\n    error: graphQlError\n  }] = useMutation(CREATE_ORDER_MUTATION);\n\n  async function handleSubmit(e) {\n    //stop the form from submitting and turn the loader on\n    e.preventDefault();\n    setLoading(true);\n    console.log('We gotta do some work..'); //Start the page transition\n\n    nProgress.start(); //Create the payment method via stripe(Token comes back here if successful)\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    console.log(paymentMethod); //Handle any errrors from stripe\n\n    if (error) {\n      setError(error);\n      return;\n    } //Send the token from step 3 to our keystone server via a custom mutation\n    //Change the page to view the order\n    // close the cart\n    //Turn the loader off\n\n\n    setLoading(false);\n    nProgress.done();\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '12px'\n      },\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }, this), graphQlError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '12px'\n      },\n      children: graphQlError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n}\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\nexport { Checkout };","map":{"version":3,"sources":["/home/avinash/Desktop/Projects/TheStore/frontend/components/Checkout.js"],"names":["styled","loadStripe","CardElement","Elements","useElements","useStripe","SickButton","useState","nProgress","useMutation","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","gql","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","checkout","graphQlError","handleSubmit","e","preventDefault","console","log","start","paymentMethod","createPaymentMethod","type","card","getElement","done","fontSize","message","Checkout"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,WAAhC,EAA6CC,SAA7C,QAA8D,yBAA9D;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,MAAMC,kBAAkB,GAAGV,MAAM,CAACW,IAAV;AAAA;AAAA;AAAA,+IAAxB;AAUA,MAAMC,qBAAqB,GAAGC,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAcA,MAAMC,SAAS,GAAGb,UAAU,CAACc,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA5B;;AAEA,SAASC,YAAT,GAAwB;AACtB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAOC;AAAP,MAAmBb,QAAQ,EAAjC;AACA,QAAM;AAAA,OAACc,OAAD;AAAA,OAASC;AAAT,MAAuBf,QAAQ,EAArC;AACA,QAAMgB,MAAM,GAAGlB,SAAS,EAAxB;AACA,QAAMmB,QAAQ,GAAGpB,WAAW,EAA5B;AACA,QAAM,CAACqB,QAAD,EAAU;AAACN,IAAAA,KAAK,EAACO;AAAP,GAAV,IAAkCjB,WAAW,CACjDG,qBADiD,CAAnD;;AAGA,iBAAee,YAAf,CAA4BC,CAA5B,EAA+B;AAC7B;AACAA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAJ6B,CAK7B;;AACAvB,IAAAA,SAAS,CAACwB,KAAV,GAN6B,CAO7B;;AACA,UAAM;AAACb,MAAAA,KAAD;AAAOc,MAAAA;AAAP,QAAwB,MAAMV,MAAM,CAACW,mBAAP,CAA2B;AAC7DC,MAAAA,IAAI,EAAC,MADwD;AAE7DC,MAAAA,IAAI,EAACZ,QAAQ,CAACa,UAAT,CAAoBnC,WAApB;AAFwD,KAA3B,CAApC;AAKA4B,IAAAA,OAAO,CAACC,GAAR,CAAYE,aAAZ,EAb6B,CAc7B;;AACA,QAAGd,KAAH,EAAS;AACPC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACA;AACD,KAlB4B,CAoB7B;AACA;AACA;AACA;;;AACAG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAd,IAAAA,SAAS,CAAC8B,IAAV;AACD;;AAED,sBACI,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEX,YAA9B;AAAA,eACGR,KAAK,iBAAI;AAAG,MAAA,KAAK,EAAE;AAACoB,QAAAA,QAAQ,EAAC;AAAV,OAAV;AAAA,gBAA8BpB,KAAK,CAACqB;AAApC;AAAA;AAAA;AAAA;AAAA,YADZ,EAEGd,YAAY,iBAAI;AAAG,MAAA,KAAK,EAAE;AAACa,QAAAA,QAAQ,EAAC;AAAV,OAAV;AAAA,gBAA8Bb,YAAY,CAACc;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFnB,eAIE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASD;;AAED,SAASC,QAAT,GAAmB;AACjB,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAE3B,SAAlB;AAAA,2BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AAED,SAAS2B,QAAT","sourcesContent":["import styled from 'styled-components';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport SickButton from './styles/SickButton';\nimport { useState } from 'react';\nimport nProgress from 'nprogress';\nimport { useMutation } from '@apollo/client';\n \nconst CheckoutFormStyles = styled.form`\n  box-shadow: 5px 5px 5px 5px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(0, 0, 0, 0.06);\n  border-radius: 5px;\n  padding: 1rem;\n  display: grid;\n  grid-gap: 1rem;\n`;\n\n\nconst CREATE_ORDER_MUTATION = gql`\n  mutation CREATE_ORDER_MUTATION($token:String!){\n    checkout(token:$token){\n      charge\n      total\n      items {\n        id\n        name\n      }\n    }\n  }\n`;\n\n\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const [error,setError] = useState();\n  const [loading,setLoading] = useState();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [checkout,{error:graphQlError}] = useMutation(\n    CREATE_ORDER_MUTATION\n  )\n  async function handleSubmit(e) {\n    //stop the form from submitting and turn the loader on\n    e.preventDefault();\n    setLoading(true);\n    console.log('We gotta do some work..');\n    //Start the page transition\n    nProgress.start();\n    //Create the payment method via stripe(Token comes back here if successful)\n    const {error,paymentMethod} = await stripe.createPaymentMethod({\n      type:'card',\n      card:elements.getElement(CardElement)\n    })\n\n    console.log(paymentMethod);\n    //Handle any errrors from stripe\n    if(error){\n      setError(error);\n      return;\n    }\n\n    //Send the token from step 3 to our keystone server via a custom mutation\n    //Change the page to view the order\n    // close the cart\n    //Turn the loader off\n    setLoading(false);\n    nProgress.done();\n  }\n\n  return (\n      <CheckoutFormStyles onSubmit={handleSubmit}>\n        {error && <p style={{fontSize:'12px'}}>{error.message}</p>}\n        {graphQlError && <p style={{fontSize:'12px'}}>{graphQlError.message}</p>}\n\n        <CardElement />\n        <SickButton>Check Out Now</SickButton>\n      </CheckoutFormStyles>\n  );\n}\n\nfunction Checkout(){\n  return (\n    <Elements stripe={stripeLib}>\n      <CheckoutForm/>\n    </Elements>\n  )\n}\n\nexport { Checkout };\n"]},"metadata":{},"sourceType":"module"}