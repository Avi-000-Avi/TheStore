{"ast":null,"code":"import _regeneratorRuntime from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/avinash/Desktop/Projects/TheStore/frontend/components/SignUp.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation SIGNIN_MUTATION($email:String!, $password:String!){\\n        authenticateUserWithPassword(email: $email, password:$password)\\n        {\\n            ... on UserAuthenticationWithPasswordSuccess {\\n            item { \\n                id\\n                email\\n                name\\n                }\\n            }\\n            ... on UserAuthenticationWithPasswordFailure {\\n                code\\n                message\\n            } \\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\nimport Error from './ErrorMessage';\nvar SIGNIN_MUTATION = gql(_templateObject());\nexport default function SignUp() {\n  _s();\n\n  var _useForm = useForm({\n    email: '',\n    password: ''\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n    //Refetch the current logged in user\n    //Using this the navigation changed instantly\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signin = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault(); //Stop the form from submitting\n\n              _context.next = 3;\n              return signin();\n\n            case 3:\n              res = _context.sent;\n              console.log(res);\n              resetForm(); //Send the email and password to the graphQL API\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  var error = (data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword.__typename) == 'UserAuthenticationWithPasswordFailure' ? data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword : undefined; //error = response  which is data?.authenticateUserWithPassword but only when __typename == 'UserAuthenticationWithPasswordFailure' then we return \n  //data?.authenticateUserWithPassword which is the error\n  //The password is submitted over the network to your server in clear text but then what happens is the server hashes it compares it to what it has in file for its own hash\n  //COncern - We are sending our password in clear text  and \n  // ANd than that's why we use HTTPS    \n  // WHat HTTPS does is makes the packets encrypted\n  //Client \n  //--\n  //packets go through \n  //your   wifi router isp  or government\n  //--\n  //Server\n  //method POST also does't let the url have the input after submit of the input\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up Your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Addrress\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign In!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 13\n  }, this);\n}\n\n_s(SignUp, \"RqReJFOyM9hzCvM4nkvNsFI+Sis=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/avinash/Desktop/Projects/TheStore/frontend/components/SignUp.js"],"names":["Form","useForm","useMutation","gql","CURRENT_USER_QUERY","Error","SIGNIN_MUTATION","SignUp","email","password","inputs","handleChange","resetForm","variables","refetchQueries","query","signin","data","loading","handleSubmit","e","preventDefault","res","console","log","error","authenticateUserWithPassword","__typename","undefined"],"mappings":"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","sourcesContent":["import Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\nimport Error from './ErrorMessage' ; \n\n\nconst SIGNIN_MUTATION = gql`\n    mutation SIGNIN_MUTATION($email:String!, $password:String!){\n        authenticateUserWithPassword(email: $email, password:$password)\n        {\n            ... on UserAuthenticationWithPasswordSuccess {\n            item { \n                id\n                email\n                name\n                }\n            }\n            ... on UserAuthenticationWithPasswordFailure {\n                code\n                message\n            } \n        }\n    }\n`;\n\nexport default function  SignUp(){\n    const {inputs, handleChange , resetForm} = useForm({\n        email:'',\n        password:''\n    })\n    const [signin, {data, loading}] = useMutation(SIGNIN_MUTATION,{\n            variables: inputs,\n            //Refetch the current logged in user\n            //Using this the navigation changed instantly\n            refetchQueries:[{query:CURRENT_USER_QUERY}]\n        });  \n\n\n    async function handleSubmit(e){\n         e.preventDefault(); //Stop the form from submitting\n         const res = await signin();\n         console.log(res);\n         resetForm();\n         //Send the email and password to the graphQL API\n    }\n    const error = data?.authenticateUserWithPassword.__typename == \n    'UserAuthenticationWithPasswordFailure'\n    ? data?.authenticateUserWithPassword\n    :undefined;\n    //error = response  which is data?.authenticateUserWithPassword but only when __typename == 'UserAuthenticationWithPasswordFailure' then we return \n    //data?.authenticateUserWithPassword which is the error\n\n    //The password is submitted over the network to your server in clear text but then what happens is the server hashes it compares it to what it has in file for its own hash\n    //COncern - We are sending our password in clear text  and \n    // ANd than that's why we use HTTPS    \n\n    // WHat HTTPS does is makes the packets encrypted\n    //Client \n    //--\n    //packets go through \n    //your   wifi router isp  or government\n    //--\n    //Server\n\n\n    //method POST also does't let the url have the input after submit of the input\n    return (<Form onSubmit={handleSubmit}> \n        <h2>Sign Up Your Account</h2>\n        <Error error={data?.authenticateUserWithPassword}/>\n        <fieldset>\n        <label htmlFor=\"email\">Email\n        <input type=\"email\" name=\"email\" placeholder=\"Your Email Addrress\" autoComplete=\"email\" value={inputs.email} onChange={handleChange}></input>\n        </label>\n        <label htmlFor=\"password\">Password\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" autoComplete=\"password\" value={inputs.password} onChange={handleChange}></input>\n        </label>\n        <button type=\"submit\">Sign In!</button>\n        </fieldset>\n    </Form>)\n    }"]},"metadata":{},"sourceType":"module"}