{"ast":null,"code":"import _defineProperty from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/avinash/Desktop/Projects/TheStore/frontend/components/Search.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SEARCH_PRODUCTS_QUERY($searchTerm: string!){\\n        searchTerms:allProducts(where:{\\n            OR: [\\n                {name_contains_i:$searchTerm},\\n                {description_contains_i:$searchTerm},\\n            ] \\n        }){\\n            id\\n            name\\n            photo{\\n                image{\\n                    publicUrlTransformed\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useLazyQuery } from '@apollo/client';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\nvar SEARCH_PRODUCTS_QUERY = gql(_templateObject()); //We don't want it to fireoff  on component render\n// WE want it to fire off   whenver we want kind of like mutation but it's a query\n//We use lazy Query\n//Bypass apollo client and always go to the network we don't want it to store directly to the network\n\nexport default function Search() {\n  _s();\n\n  var _useLazyQuery = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\n    fetchPolicy: 'no-cache'\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      findItems = _useLazyQuery2[0],\n      _useLazyQuery2$ = _useLazyQuery2[1],\n      loading = _useLazyQuery2$.loading,\n      data = _useLazyQuery2$.data,\n      error = _useLazyQuery2$.error;\n\n  var findItemsButChill = debounce(findItems);\n  resetIdCounter();\n\n  var _useCombobox = useCombobox({\n    items: [],\n    onInputValueChange: function onInputValueChange() {\n      console.log('Input Change!');\n    },\n    onSelectedItemChange: function onSelectedItemChange() {\n      console.log('Selected item chagne');\n    }\n  }),\n      getMenuProps = _useCombobox.getMenuProps,\n      getInputProps = _useCombobox.getInputProps,\n      getComboboxProps = _useCombobox.getComboboxProps;\n\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: 'search',\n        placeholder: 'Search for an item',\n        id: 'search',\n        className: 'loading'\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getMenuProps()), {}, {\n      children: [/*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: \"Hii\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Search, \"qqTmH+gPd0/f1Li0dvMl6jQOUEA=\", false, function () {\n  return [useLazyQuery, useCombobox];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/avinash/Desktop/Projects/TheStore/frontend/components/Search.js"],"names":["useLazyQuery","resetIdCounter","useCombobox","gql","debounce","DropDown","DropDownItem","SearchStyles","SEARCH_PRODUCTS_QUERY","Search","fetchPolicy","findItems","loading","data","error","findItemsButChill","items","onInputValueChange","console","log","onSelectedItemChange","getMenuProps","getInputProps","getComboboxProps","type","placeholder","id","className"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAAQC,QAAR,EAAkBC,YAAlB,EAAgCC,YAAhC,QAAmD,mBAAnD;AAEA,IAAMC,qBAAqB,GAAGL,GAAH,mBAA3B,C,CAoBA;AACA;AACA;AACA;;AACA,eAAe,SAASM,MAAT,GAAiB;AAAA;;AAAA,sBACeT,YAAY,CACnDQ,qBADmD,EAEnD;AACIE,IAAAA,WAAW,EAAC;AADhB,GAFmD,CAD3B;AAAA;AAAA,MACrBC,SADqB;AAAA;AAAA,MACTC,OADS,mBACTA,OADS;AAAA,MACAC,IADA,mBACAA,IADA;AAAA,MACKC,KADL,mBACKA,KADL;;AAQ5B,MAAMC,iBAAiB,GAAGX,QAAQ,CAACO,SAAD,CAAlC;AAEAV,EAAAA,cAAc;;AAVc,qBAW4BC,WAAW,CAAC;AAChEc,IAAAA,KAAK,EAAE,EADyD;AAEhEC,IAAAA,kBAFgE,gCAE5C;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,KAJ+D;AAKhEC,IAAAA,oBALgE,kCAK1C;AAClBF,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;AAP+D,GAAD,CAXvC;AAAA,MAWrBE,YAXqB,gBAWrBA,YAXqB;AAAA,MAWPC,aAXO,gBAWPA,aAXO;AAAA,MAWQC,gBAXR,gBAWQA,gBAXR;;AAqB5B,sBAAO,QAAC,YAAD;AAAA,4BACH,+CAASA,gBAAgB,EAAzB;AAAA,6BACI,mCAAYD,aAAa,CAAC;AACtBE,QAAAA,IAAI,EAAC,QADiB;AAEtBC,QAAAA,WAAW,EAAC,oBAFU;AAGtBC,QAAAA,EAAE,EAAC,QAHmB;AAItBC,QAAAA,SAAS,EAAC;AAJY,OAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADG,eASH,QAAC,QAAD,kCAAcN,YAAY,EAA1B;AAAA,8BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAcH;;GAnCuBZ,M;UACuBT,Y,EAUaE,W;;;KAXpCO,M","sourcesContent":["import { useLazyQuery } from '@apollo/client';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport {DropDown, DropDownItem, SearchStyles} from './styles/DropDown';\n\nconst SEARCH_PRODUCTS_QUERY = gql`\n    query SEARCH_PRODUCTS_QUERY($searchTerm: string!){\n        searchTerms:allProducts(where:{\n            OR: [\n                {name_contains_i:$searchTerm},\n                {description_contains_i:$searchTerm},\n            ] \n        }){\n            id\n            name\n            photo{\n                image{\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\n\n\n//We don't want it to fireoff  on component render\n// WE want it to fire off   whenver we want kind of like mutation but it's a query\n//We use lazy Query\n//Bypass apollo client and always go to the network we don't want it to store directly to the network\nexport default function Search(){\n    const [findItems, {loading, data,error}] = useLazyQuery(\n        SEARCH_PRODUCTS_QUERY,\n        {\n            fetchPolicy:'no-cache',\n        }\n    );\n\n    const findItemsButChill = debounce(findItems);\n\n    resetIdCounter();\n    const {getMenuProps, getInputProps, getComboboxProps} = useCombobox({\n        items: [],\n        onInputValueChange(){\n            console.log('Input Change!');\n        },\n        onSelectedItemChange(){\n            console.log('Selected item chagne');\n        }\n    })  \n\n    return <SearchStyles>\n        <div {...getComboboxProps()}>\n            <input  {...getInputProps({\n                type:'search',\n                placeholder:'Search for an item',\n                id:'search',\n                className:'loading',\n            })} />\n        </div>\n        <DropDown {...getMenuProps()}>\n            <DropDownItem>Hii</DropDownItem>\n            <DropDownItem>Hello</DropDownItem>\n        </DropDown>\n    </SearchStyles>\n}"]},"metadata":{},"sourceType":"module"}