{"ast":null,"code":"import _regeneratorRuntime from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/avinash/Desktop/Projects/TheStore/frontend/components/UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation UPDATE_PRODUCT_MUTATION (\\n            $id:ID!\\n            $name:String\\n            $description:String\\n            $price:Int\\n        ){\\n            updateProduct(\\n                id:$id,\\n                data:{\\n                    name: $name,description:$description,price:$price\\n                }\\n            )\\n                {\\n                  id\\n                  name\\n                  description\\n                  price\\n                }\\n        }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SINGLE_PRODUCT_QUERY($id:ID!){\\n        Product(where: {id:$id}){\\n            id\\n            name\\n            description\\n            price\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport DisplayError from './ErrorMessage';\nimport Form from './styles/Form';\nvar SINGLE_PRODUCT_QUERY = gql(_templateObject());\nvar UPDATE_PRODUCT_MUTATION = gql(_templateObject2());\nexport default function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  //We need to get the existing product\n  var _useQuery = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading; // We need to get the mutation to update the product\n\n\n  var _useMutation = useMutation(UPDATE_PRODUCT_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateProduct = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      updateData = _useMutation2$.data,\n      updateError = _useMutation2$.error,\n      updateLoading = _useMutation2$.loading; //Create State for form inputs\n\n\n  var _useForm = useForm(data === null || data === void 0 ? void 0 : data.Product),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      clearForm = _useForm.clearForm,\n      resetForm = _useForm.resetForm;\n\n  console.log(inputs);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading. . .\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 24\n  }, this); //We need the form to handle the updates \n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return updateProduct({\n                  variables: {\n                    id: id,\n                    name: inputs.name,\n                    description: inputs.description,\n                    price: inputs.price\n                  }\n                })[\"catch\"](console.log(error));\n\n              case 3:\n                res = _context.sent;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error || updateError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: updateLoading,\n      \"aria-busy\": updateLoading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"price\",\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateProduct, \"REoP2Eg//Il8ZI0ByhiIABy3MyY=\", false, function () {\n  return [useQuery, useMutation, useForm];\n});\n\n_c = UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/home/avinash/Desktop/Projects/TheStore/frontend/components/UpdateProduct.js"],"names":["useMutation","useQuery","gql","useForm","DisplayError","Form","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","variables","data","error","loading","updateProduct","updateData","updateError","updateLoading","Product","inputs","handleChange","clearForm","resetForm","console","log","e","preventDefault","name","description","price","res"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport DisplayError from './ErrorMessage';\nimport Form from './styles/Form';\n\n\nconst SINGLE_PRODUCT_QUERY = gql`\n    query SINGLE_PRODUCT_QUERY($id:ID!){\n        Product(where: {id:$id}){\n            id\n            name\n            description\n            price\n        }\n    }\n`;\n\nconst UPDATE_PRODUCT_MUTATION = gql`\n    mutation UPDATE_PRODUCT_MUTATION (\n            $id:ID!\n            $name:String\n            $description:String\n            $price:Int\n        ){\n            updateProduct(\n                id:$id,\n                data:{\n                    name: $name,description:$description,price:$price\n                }\n            )\n                {\n                  id\n                  name\n                  description\n                  price\n                }\n        }\n`;\n\n\nexport default function UpdateProduct({id}){\n    //We need to get the existing product\n    const {data,error,loading} = useQuery(SINGLE_PRODUCT_QUERY,{\n        variables:{id},\n    });\n\n    // We need to get the mutation to update the product\n    const [updateProduct, {data:updateData,error:updateError,loading:updateLoading}]= useMutation(UPDATE_PRODUCT_MUTATION);\n\n    //Create State for form inputs\n    const { inputs, handleChange, clearForm, resetForm } = useForm(data?.Product); \n    console.log(inputs);\n    if(loading) return <p>loading. . .</p>\n\n    //We need the form to handle the updates \n    return (\n        <Form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            const res = await updateProduct({\n                    variables:{\n                        id:id,\n                        name:inputs.name,\n                        description:inputs.description,\n                        price:inputs.price,\n                    }\n            }).catch(console.log(error)); \n            // Submit the inputfields to the backend:\n          }}\n        >\n          <DisplayError error={error || updateError} />\n          <fieldset disabled={updateLoading} aria-busy={updateLoading}>\n            \n            <label htmlFor=\"name\">\n              Name\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                placeholder=\"Name\"\n                value={inputs.name}\n                onChange={handleChange}\n              />\n            </label>\n            <label htmlFor=\"price\">\n              Price\n              <input\n                type=\"number\"\n                id=\"price\"\n                name=\"price\"\n                placeholder=\"price\"\n                value={inputs.price}\n                onChange={handleChange}\n              />\n            </label>\n            <label htmlFor=\"description\">\n              Description\n              <textarea\n                id=\"description\"\n                name=\"description\"\n                placeholder=\"Description\"\n                value={inputs.description}\n                onChange={handleChange}\n              />\n            </label>\n    \n            <button type=\"submit\">Update Product</button>\n          </fieldset>\n        </Form>\n      );\n    }\n"]},"metadata":{},"sourceType":"module"}