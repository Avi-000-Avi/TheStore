{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/avinash/Desktop/Projects/TheStore/frontend/lib/cartState.js\";\nimport { createContext, useContext, useState } from \"react\";\nconst LocalStateContext = /*#__PURE__*/createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({\n  children\n}) {\n  //This is our own custom provider!. We will store data and functionality in here and anyone can access it via the consumer!\n  const {\n    0: cartOpen,\n    1: setCartOpen\n  } = useState(false);\n\n  function toggleCart() {\n    setCartOpen(!cartOpen);\n  }\n\n  function closeCart() {\n    setCartOpen(false);\n  }\n\n  function openCart() {\n    setCartOpen(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen,\n      setCartOpen\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this);\n} //make a custom hook to access the cart local state\n\n\nfunction useCart() {\n  //We use a consumer here to access the local state\n  const all = useContext(LocalStateContext);\n  return all;\n}\n\nexport { CartStateProvider, useCart };","map":{"version":3,"sources":["/home/avinash/Desktop/Projects/TheStore/frontend/lib/cartState.js"],"names":["createContext","useContext","useState","LocalStateContext","LocalStateProvider","Provider","CartStateProvider","children","cartOpen","setCartOpen","toggleCart","closeCart","openCart","useCart","all"],"mappings":";;AAAA,SAASA,aAAT,EAAuBC,UAAvB,EAAmCC,QAAnC,QAAkD,OAAlD;AAEA,MAAMC,iBAAiB,gBAAIH,aAAa,EAAxC;AACA,MAAMI,kBAAkB,GAAID,iBAAiB,CAACE,QAA9C;;AAEA,SAASC,iBAAT,CAA2B;AAACC,EAAAA;AAAD,CAA3B,EAAsC;AAClC;AAEA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,KAAD,CAAxC;;AAEA,WAASQ,UAAT,GAAqB;AACjBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH;;AAED,WAASG,SAAT,GAAoB;AAChBF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAED,WAASG,QAAT,GAAmB;AACfH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,sBAAQ,QAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE;AAACD,MAAAA,QAAD;AAAUC,MAAAA;AAAV,KAA3B;AAAA,cACHF;AADG;AAAA;AAAA;AAAA;AAAA,UAAR;AAGH,C,CAED;;;AACA,SAASM,OAAT,GAAkB;AACd;AACA,QAAMC,GAAG,GAAGb,UAAU,CAACE,iBAAD,CAAtB;AACA,SAAOW,GAAP;AACH;;AAED,SAAQR,iBAAR,EAA0BO,OAA1B","sourcesContent":["import { createContext,useContext, useState} from \"react\";\n \nconst LocalStateContext  = createContext();\nconst LocalStateProvider  = LocalStateContext.Provider;\n\nfunction CartStateProvider({children}){\n    //This is our own custom provider!. We will store data and functionality in here and anyone can access it via the consumer!\n\n    const [cartOpen ,setCartOpen] = useState(false);\n\n    function toggleCart(){\n        setCartOpen(!cartOpen);\n    }\n\n    function closeCart(){\n        setCartOpen(false);\n    }\n\n    function openCart(){\n        setCartOpen(true);\n    }\n\n    return (<LocalStateProvider value={{cartOpen,setCartOpen}}> \n        {children}\n    </LocalStateProvider>);\n}\n\n//make a custom hook to access the cart local state\nfunction useCart(){\n    //We use a consumer here to access the local state\n    const all = useContext(LocalStateContext);\n    return all;\n}\n\nexport {CartStateProvider,useCart};"]},"metadata":{},"sourceType":"module"}