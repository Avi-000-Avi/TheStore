{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/avinash/Desktop/Projects/TheStore/frontend/components/Products.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nconst ALL_PRODUCTS_QUERY = gql`query ALL_PRODUCTS_QUERY{\n    allProducts{\n      id\n      name\n      description\n      photo{\n        id\n        image{\n          publicUrlTransformed\n        }\n      }\n    }\n  }`;\nexport default function Products() {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS_QUERY);\n  console.log(data, error, loading);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading... \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.allProducts.map(product => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: product.name\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/avinash/Desktop/Projects/TheStore/frontend/components/Products.js"],"names":["useQuery","gql","ALL_PRODUCTS_QUERY","Products","data","error","loading","console","log","message","allProducts","map","product","name","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,kBAAkB,GAAED,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAZA;AAeA,eAAe,SAASE,QAAT,GAAmB;AAC9B,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA,KAAN;AAAYC,IAAAA;AAAZ,MAAuBN,QAAQ,CAACE,kBAAD,CAArC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,KAAlB,EAAyBC,OAAzB;AAEA,MAAGA,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,MAAGD,KAAH,EAAU,oBAAO;AAAA,0BAAWA,KAAK,CAACI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEV,sBACI;AAAA,cACKL,IAAI,CAACM,WAAL,CAAiBC,GAAjB,CAAsBC,OAAD,iBAClB;AAAA,gBAAqBA,OAAO,CAACC;AAA7B,OAAQD,OAAO,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\n\nconst ALL_PRODUCTS_QUERY =gql`query ALL_PRODUCTS_QUERY{\n    allProducts{\n      id\n      name\n      description\n      photo{\n        id\n        image{\n          publicUrlTransformed\n        }\n      }\n    }\n  }`\n \n\nexport default function Products(){\n    const {data,error,loading} = useQuery(ALL_PRODUCTS_QUERY);\n    console.log(data, error, loading);\n\n    if(loading) return <p>loading... </p>\n    if(error) return <p>Error: {error.message}</p>\n\n    return (\n        <div>\n            {data.allProducts.map((product) => (\n                <p key={product.id}>{product.name}</p>\n            ))}\n         </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}