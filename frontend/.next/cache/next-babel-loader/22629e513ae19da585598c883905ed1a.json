{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/avinash/Desktop/Projects/TheStore/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/avinash/Desktop/Projects/TheStore/frontend/components/Products.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_PRODUCTS_QUERY {\\n    allProducts {\\n      id\\n      name\\n      price\\n      description\\n      photo {\\n        id\\n        image {\\n          publicUrlTransformed\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Product from './Product';\nvar ALL_PRODUCTS_QUERY = gql(_templateObject());\nvar ProductsList = styled.div.withConfig({\n  displayName: \"Products__ProductsList\",\n  componentId: \"sc-1uv5x8m-0\"\n})([\"display:grid;grid-template-columns:1fr 1fr 1fr;grid-gap:60px;\"]);\n_c = ProductsList;\nexport default function Products() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(ALL_PRODUCTS_QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  console.log(data, error, loading);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading... \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductsList, {\n      children: data.allProducts.map(function (product) {\n        return /*#__PURE__*/_jsxDEV(Product, {\n          product: product\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Products, \"ssi9LISu9lyQI5GwqWYaQTaK1M0=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = Products;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductsList\");\n$RefreshReg$(_c2, \"Products\");","map":{"version":3,"sources":["/home/avinash/Desktop/Projects/TheStore/frontend/components/Products.js"],"names":["useQuery","gql","styled","Product","ALL_PRODUCTS_QUERY","ProductsList","div","Products","data","error","loading","console","log","message","allProducts","map","product","id"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,IAAMC,kBAAkB,GAAGH,GAAH,mBAAxB;AAiBE,IAAMI,YAAY,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,qEAAlB;KAAMD,Y;AAOR,eAAe,SAASE,QAAT,GAAmB;AAAA;;AAAA;;AAAA,kBACDP,QAAQ,CAACI,kBAAD,CADP;AAAA,MACvBI,IADuB,aACvBA,IADuB;AAAA,MAClBC,KADkB,aAClBA,KADkB;AAAA,MACZC,OADY,aACZA,OADY;;AAE9BC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,KAAlB,EAAyBC,OAAzB;AAEA,MAAGA,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,MAAGD,KAAH,EAAU,oBAAO;AAAA,0BAAWA,KAAK,CAACI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEV,sBACI;AAAA,2BACE,QAAC,YAAD;AAAA,gBACGL,IAAI,CAACM,WAAL,CAAiBC,GAAjB,CAAqB,UAACC,OAAD;AAAA,4BAClB,QAAC,OAAD;AAA0B,UAAA,OAAO,EAAEA;AAAnC,WAAcA,OAAO,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,iBADkB;AAAA,OAArB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAhBuBV,Q;UACSP,Q;;;MADTO,Q","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Product from './Product';\n\nconst ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY {\n    allProducts {\n      id\n      name\n      price\n      description\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\n  const ProductsList = styled.div`\n    display:grid;\n    grid-template-columns:1fr 1fr 1fr;\n    grid-gap:60px;\n  `;\n \n\nexport default function Products(){\n    const {data,error,loading} = useQuery(ALL_PRODUCTS_QUERY);\n    console.log(data, error, loading);\n\n    if(loading) return <p>loading... </p>\n    if(error) return <p>Error: {error.message}</p>\n\n    return (\n        <div>\n          <ProductsList>\n            {data.allProducts.map((product) => (\n                <Product key={product.id} product={product}/>\n            ))}\n            </ProductsList>\n         </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}