{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/avinash/Desktop/Projects/TheStore/frontend/components/RemoveFromCart.js\";\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nconst BigButton = styled.button.withConfig({\n  displayName: \"RemoveFromCart__BigButton\",\n  componentId: \"emvtd6-0\"\n})([\"font-size:3rem;background:none;border:0;&:hover{color:var(--red);cursor:pointer;}\"]);\nconst REMOVE_FROM_CART = gql`\n  mutation REMOVE_FROM_CART($id:ID!){\n    deleteCartItem(id:$id){\n      id\n    }\n  }\n`; //Alternative to Refetch Queries and also faster\n//When you delete an item make sure you refetch the users cart  and we rerender it\n//We don't need to make a second trip to the server\n// Simply pop or evict it from the cache\n//remove an item come back and run update and give us access to both entire apollo cache as well as the information that came back from the API\n//cache.identify(payload.data.deleteCartItem) is like 'CartItem:647298274324823749238'\n//I am pretty sure  what comes back from the server so what i am going to do is immediately \n\nfunction update(cache, payload) {\n  cache.evict(cache.identify(payload.data.deleteCartItem));\n}\n\nexport default function RemoveFromCart({\n  id\n}) {\n  const [removeFromCart, {\n    loading\n  }] = useMutation(REMOVE_FROM_CART, {\n    variables: {\n      id\n    },\n    update\n  });\n  return /*#__PURE__*/_jsxDEV(BigButton, {\n    onClick: removeFromCart,\n    disabled: loading,\n    type: \"button\",\n    title: \"Remove this item from the cart\",\n    children: \"\\xD7\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/avinash/Desktop/Projects/TheStore/frontend/components/RemoveFromCart.js"],"names":["useMutation","gql","styled","BigButton","button","REMOVE_FROM_CART","update","cache","payload","evict","identify","data","deleteCartItem","RemoveFromCart","id","removeFromCart","loading","variables"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,MAAV;AAAA;AAAA;AAAA,yFAAf;AAUA,MAAMC,gBAAgB,GAAGJ,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,CANA,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASK,MAAT,CAAgBC,KAAhB,EAAsBC,OAAtB,EAA8B;AAC1BD,EAAAA,KAAK,CAACE,KAAN,CAAYF,KAAK,CAACG,QAAN,CAAeF,OAAO,CAACG,IAAR,CAAaC,cAA5B,CAAZ;AACH;;AAED,eAAe,SAASC,cAAT,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAA6B;AACxC,QAAM,CAACC,cAAD,EAAgB;AAACC,IAAAA;AAAD,GAAhB,IAA4BhB,WAAW,CAC5CK,gBAD4C,EAC3B;AACdY,IAAAA,SAAS,EAAC;AAACH,MAAAA;AAAD,KADI;AAEdR,IAAAA;AAFc,GAD2B,CAA7C;AAMA,sBACA,QAAC,SAAD;AACE,IAAA,OAAO,EAAES,cADX;AAEE,IAAA,QAAQ,EAAEC,OAFZ;AAGE,IAAA,IAAI,EAAC,QAHP;AAGe,IAAA,KAAK,EAAC,gCAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAMH","sourcesContent":["import { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\n\nconst BigButton = styled.button`\n    font-size:3rem;\n    background:none;\n    border:0;\n    &:hover{\n        color:var(--red);\n        cursor: pointer;\n    }\n`;\n\nconst REMOVE_FROM_CART = gql`\n  mutation REMOVE_FROM_CART($id:ID!){\n    deleteCartItem(id:$id){\n      id\n    }\n  }\n`;\n\n//Alternative to Refetch Queries and also faster\n//When you delete an item make sure you refetch the users cart  and we rerender it\n//We don't need to make a second trip to the server\n// Simply pop or evict it from the cache\n//remove an item come back and run update and give us access to both entire apollo cache as well as the information that came back from the API\n//cache.identify(payload.data.deleteCartItem) is like 'CartItem:647298274324823749238'\n//I am pretty sure  what comes back from the server so what i am going to do is immediately \n\nfunction update(cache,payload){\n    cache.evict(cache.identify(payload.data.deleteCartItem));\n}\n\nexport default function RemoveFromCart({id}){\n    const [removeFromCart,{loading}]= useMutation\n    (REMOVE_FROM_CART,{\n        variables:{id},\n        update,\n    });\n\n    return (\n    <BigButton\n      onClick={removeFromCart}\n      disabled={loading}\n      type=\"button\"title=\"Remove this item from the cart\">&times;</BigButton>\n    );\n}"]},"metadata":{},"sourceType":"module"}