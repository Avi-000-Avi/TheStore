{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/avinash/Desktop/Projects/TheStore/frontend/components/RequestReset.js\";\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Error from './ErrorMessage';\nconst REQUEST_RESET = gql`\n    mutation REQUEST_RESET($name:String!,$email:String!, $password:String!){\n        sendUserPasswordResetLink(data:  email:$email){\n            id\n            email\n            name\n        }\n    }\n`;\nexport default function RequestReset() {\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: ''\n  });\n  const [signup, {\n    data,\n    loading,\n    error\n  }] = useMutation(REQUEST_RESET, {\n    variables: inputs //Refetch the current logged in user\n    //Using this the navigation changed instantly\n    //refetchQueries:[{query:CURRENT_USER_QUERY}]\n\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault(); //Stop the form from submitting\n\n    const res = await signup().catch(console.error);\n    console.log(res);\n    resetForm(); //Send the email and password to the graphQL API\n  } //method POST also does't let the url have the input after submit of  the input\n\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Request a Password Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), (data === null || data === void 0 ? void 0 : data.createUser) && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Signed Up with \", data.createUser.email, \" - Please go ahead and Sign in!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Addrress\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Request Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, this);\n}","map":{"version":3,"sources":["/home/avinash/Desktop/Projects/TheStore/frontend/components/RequestReset.js"],"names":["Form","useForm","useMutation","gql","Error","REQUEST_RESET","RequestReset","inputs","handleChange","resetForm","email","signup","data","loading","error","variables","handleSubmit","e","preventDefault","res","catch","console","log","createUser"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,aAAa,GAAGF,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,eAAe,SAAUG,YAAV,GAAwB;AACnC,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,YAAT;AAAwBC,IAAAA;AAAxB,MAAqCR,OAAO,CAAC;AAC/CS,IAAAA,KAAK,EAAC;AADyC,GAAD,CAAlD;AAGA,QAAM,CAACC,MAAD,EAAS;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAeC,IAAAA;AAAf,GAAT,IAAkCZ,WAAW,CAAEG,aAAF,EAAgB;AAC3DU,IAAAA,SAAS,EAAER,MADgD,CAE3D;AACA;AACA;;AAJ2D,GAAhB,CAAnD;;AAQA,iBAAeS,YAAf,CAA4BC,CAA5B,EAA8B;AACzBA,IAAAA,CAAC,CAACC,cAAF,GADyB,CACL;;AACpB,UAAMC,GAAG,GAAG,MAAMR,MAAM,GAAGS,KAAT,CAAeC,OAAO,CAACP,KAAvB,CAAlB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAV,IAAAA,SAAS,GAJgB,CAKzB;AACJ,GAlBkC,CAqBnC;;;AACA,sBAAQ,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEO,YAAhB;AAAA,4BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,EAEH,CAAAJ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEW,UAAN,kBAAoB;AAAA,oCACDX,IAAI,CAACW,UAAL,CAAgBb,KADf;AAAA;AAAA;AAAA;AAAA;AAAA,YAFjB,eAKJ,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEI;AAAd;AAAA;AAAA;AAAA;AAAA,YALI,eAMJ;AAAA,8BACA;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCACA;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC,OAAzB;AAAiC,UAAA,WAAW,EAAC,qBAA7C;AAAmE,UAAA,YAAY,EAAC,OAAhF;AAAwF,UAAA,KAAK,EAAEP,MAAM,CAACG,KAAtG;AAA6G,UAAA,QAAQ,EAAEF;AAAvH;AAAA;AAAA;AAAA;AAAA,gBADA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YANI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAaC","sourcesContent":["import Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Error from './ErrorMessage' ; \n\nconst REQUEST_RESET = gql`\n    mutation REQUEST_RESET($name:String!,$email:String!, $password:String!){\n        sendUserPasswordResetLink(data:  email:$email){\n            id\n            email\n            name\n        }\n    }\n`;\n\nexport default function  RequestReset(){\n    const {inputs, handleChange , resetForm} = useForm({\n        email:'',\n    })\n    const [signup, {data, loading,error}] = useMutation( REQUEST_RESET,{\n            variables: inputs,\n            //Refetch the current logged in user\n            //Using this the navigation changed instantly\n            //refetchQueries:[{query:CURRENT_USER_QUERY}]\n        });  \n\n\n    async function handleSubmit(e){\n         e.preventDefault(); //Stop the form from submitting\n         const res = await signup().catch(console.error);\n         console.log(res);\n         resetForm();\n         //Send the email and password to the graphQL API\n    }\n   \n\n    //method POST also does't let the url have the input after submit of  the input\n    return (<Form onSubmit={handleSubmit}> \n        <h2>Request a Password Reset</h2>\n        {data?.createUser && <p>\n            Signed Up with {data.createUser.email} - Please go ahead and Sign in!\n            </p>}\n        <Error error={error}/>\n        <fieldset>\n        <label htmlFor=\"email\">Email\n        <input type=\"email\" name=\"email\" placeholder=\"Your Email Addrress\" autoComplete=\"email\" value={inputs.email} onChange={handleChange}></input>\n        </label>\n        <button type=\"submit\">Request Reset</button>\n        </fieldset>\n    </Form>)\n    }"]},"metadata":{},"sourceType":"module"}